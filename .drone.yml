---
kind: pipeline
name: deploy cron
steps:
- commands:
  - apk update && apk --no-cache add bash curl docker-compose && curl --version &&
    bash --version && docker-compose version
  - /bin/bash /drone/src/scripts/deploy.sh
  environment:
    CF_API_EMAIL:
      from_secret: CF_API_EMAIL
    CF_API_KEY:
      from_secret: CF_API_KEY
    CLIENT_ID:
      from_secret: CLIENT_ID
    CLIENT_SECRET:
      from_secret: CLIENT_SECRET
    DRONE_CI: true
    DRONE_GITHUB_CLIENT_ID:
      from_secret: DRONE_GITHUB_CLIENT_ID
    DRONE_GITHUB_CLIENT_SECRET:
      from_secret: DRONE_GITHUB_CLIENT_SECRET
    DRONE_RPC_SECRET:
      from_secret: DRONE_RPC_SECRET
    DRONE_USER_CREATE:
      from_secret: DRONE_USER_CREATE
    DRONE_USER_FILTER:
      from_secret: DRONE_USER_FILTER
    OPENVPN_PASSWORD:
      from_secret: OPENVPN_PASSWORD
    OPENVPN_USERNAME:
      from_secret: OPENVPN_USERNAME
    SECRET:
      from_secret: SECRET
    UPDATE_HC_UUID:
      from_secret: UPDATE_HC_UUID
  image: docker:20.10.12
  name: deploy prod
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
- failure: ignore
  image: plugins/slack
  name: failure notification
  settings:
    channel: drone-ci
    template: |
      Deploy failed
      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
      Author: {{ build.author }}
      <{{ build.link }}|Visit build #{{build.number}} page ➡️>
    webhook:
      from_secret: SLACK_WEBHOOK_URL
  when:
    status:
    - failure
trigger:
  cron:
  - daily
  event:
  - cron
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: dockersock
---
kind: pipeline
name: deploy push
steps:
- commands:
  - apk update && apk --no-cache add bash curl docker-compose && curl --version &&
    bash --version && docker-compose version
  - /bin/bash /drone/src/scripts/deploy.sh
  environment:
    CF_API_EMAIL:
      from_secret: CF_API_EMAIL
    CF_API_KEY:
      from_secret: CF_API_KEY
    CLIENT_ID:
      from_secret: CLIENT_ID
    CLIENT_SECRET:
      from_secret: CLIENT_SECRET
    DRONE_CI: true
    DRONE_GITHUB_CLIENT_ID:
      from_secret: DRONE_GITHUB_CLIENT_ID
    DRONE_GITHUB_CLIENT_SECRET:
      from_secret: DRONE_GITHUB_CLIENT_SECRET
    DRONE_RPC_SECRET:
      from_secret: DRONE_RPC_SECRET
    DRONE_USER_CREATE:
      from_secret: DRONE_USER_CREATE
    DRONE_USER_FILTER:
      from_secret: DRONE_USER_FILTER
    OPENVPN_PASSWORD:
      from_secret: OPENVPN_PASSWORD
    OPENVPN_USERNAME:
      from_secret: OPENVPN_USERNAME
    SECRET:
      from_secret: SECRET
    UPDATE_HC_UUID:
      from_secret: UPDATE_HC_UUID
  image: docker:20.10.12
  name: deploy prod
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
- failure: ignore
  image: plugins/slack
  name: failure notification
  settings:
    channel: drone-ci
    template: |
      Deploy failed
      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
      Author: {{ build.author }}
      <{{ build.link }}|Visit build #{{build.number}} page ➡️>
    webhook:
      from_secret: SLACK_WEBHOOK_URL
  when:
    status:
    - failure
trigger:
  event:
  - push
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: dockersock
